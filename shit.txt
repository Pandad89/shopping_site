<ref *2> ServerResponse {
[0]   _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
[0]   _eventsCount: 1,
[0]   _maxListeners: undefined,
[0]   outputData: [],
[0]   outputSize: 0,
[0]   writable: true,
[0]   destroyed: false,
[0]   _last: false,
[0]   chunkedEncoding: false,
[0]   shouldKeepAlive: true,
[0]   maxRequestsOnConnectionReached: false,
[0]   _defaultKeepAlive: true,
[0]   useChunkedEncodingByDefault: true,
[0]   sendDate: true,
[0]   _removedConnection: false,
[0]   _removedContLen: false,
[0]   _removedTE: false,
[0]   _contentLength: null,
[0]   _hasBody: true,
[0]   _trailer: '',
[0]   finished: false,
[0]   _headerSent: false,
[0]   _closed: false,
[0]   socket: <ref *1> Socket {
[0]     connecting: false,
[0]     _hadError: false,
[0]     _parent: null,
[0]     _host: null,
[0]     _readableState: ReadableState {
[0]       objectMode: false,
[0]       highWaterMark: 16384,
[0]       buffer: BufferList { head: null, tail: null, length: 0 },
[0]       length: 0,
[0]       pipes: [],
[0]       flowing: true,
[0]       ended: false,
[0]       endEmitted: false,
[0]       reading: true,
[0]       constructed: true,
[0]       sync: false,
[0]       needReadable: true,
[0]       emittedReadable: false,
[0]       readableListening: false,
[0]       resumeScheduled: false,
[0]       errorEmitted: false,
[0]       emitClose: false,
[0]       autoDestroy: true,
[0]       destroyed: false,
[0]       errored: null,
[0]       closed: false,
[0]       closeEmitted: false,
[0]       defaultEncoding: 'utf8',
[0]       awaitDrainWriters: null,
[0]       multiAwaitDrain: false,
[0]       readingMore: false,
[0]       dataEmitted: false,
[0]       decoder: null,
[0]       encoding: null,
[0]       [Symbol(kPaused)]: false
[0]     },
[0]     _events: [Object: null prototype] {
[0]       end: [Array],
[0]       timeout: [Function: socketOnTimeout],
[0]       data: [Function: bound socketOnData],
[0]       error: [Function: socketOnError],
[0]       close: [Array],
[0]       drain: [Function: bound socketOnDrain],
[0]       resume: [Function: onSocketResume],
[0]       pause: [Function: onSocketPause]
[0]     },
[0]     _eventsCount: 8,
[0]     _maxListeners: undefined,
[0]     _writableState: WritableState {
[0]       objectMode: false,
[0]       highWaterMark: 16384,
[0]       finalCalled: false,
[0]       needDrain: false,
[0]       ending: false,
[0]       ended: false,
[0]       finished: false,
[0]       destroyed: false,
[0]       decodeStrings: false,
[0]       defaultEncoding: 'utf8',
[0]       length: 0,
[0]       writing: false,
[0]       corked: 0,
[0]       sync: true,
[0]       bufferProcessing: false,
[0]       onwrite: [Function: bound onwrite],
[0]       writecb: null,
[0]       writelen: 0,
[0]       afterWriteTickInfo: null,
[0]       buffered: [],
[0]       bufferedIndex: 0,
[0]       allBuffers: true,
[0]       allNoop: true,
[0]       pendingcb: 0,
[0]       constructed: true,
[0]       prefinished: false,
[0]       errorEmitted: false,
[0]       emitClose: false,
[0]       autoDestroy: true,
[0]       errored: null,
[0]       closed: false,
[0]       closeEmitted: false,
[0]       [Symbol(kOnFinished)]: []
[0]     },
[0]     allowHalfOpen: true,
[0]     _sockname: null,
[0]     _pendingData: null,
[0]     _pendingEncoding: '',
[0]     server: Server {
[0]       maxHeaderSize: undefined,
[0]       insecureHTTPParser: undefined,
[0]       requestTimeout: 300000,
[0]       headersTimeout: 60000,
[0]       keepAliveTimeout: 5000,
[0]       connectionsCheckingInterval: 30000,
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 2,
[0]       _maxListeners: undefined,
[0]       _connections: 1,
[0]       _handle: [TCP],
[0]       _usingWorkers: false,
[0]       _workers: [],
[0]       _unref: false,
[0]       allowHalfOpen: true,
[0]       pauseOnConnect: false,
[0]       noDelay: true,
[0]       keepAlive: false,
[0]       keepAliveInitialDelay: 0,
[0]       httpAllowHalfOpen: false,
[0]       timeout: 0,
[0]       maxHeadersCount: null,
[0]       maxRequestsPerSocket: 0,
[0]       _connectionKey: '6::::5000',
[0]       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
[0]       [Symbol(ServerResponse)]: [Function: ServerResponse],
[0]       [Symbol(kCapture)]: false,
[0]       [Symbol(async_id_symbol)]: 10,
[0]       [Symbol(http.server.connections)]: ConnectionsList {},
[0]       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
[0]         _idleTimeout: 30000,
[0]         _idlePrev: [TimersList],
[0]         _idleNext: [TimersList],
[0]         _idleStart: 422,
[0]         _onTimeout: [Function: bound checkConnections],
[0]         _timerArgs: undefined,
[0]         _repeat: 30000,
[0]         _destroyed: false,
[0]         [Symbol(refed)]: false,
[0]         [Symbol(kHasPrimitive)]: false,
[0]         [Symbol(asyncId)]: 9,
[0]         [Symbol(triggerId)]: 1
[0]       },
[0]       [Symbol(kUniqueHeaders)]: null
[0]     },
[0]     _server: Server {
[0]       maxHeaderSize: undefined,
[0]       insecureHTTPParser: undefined,
[0]       requestTimeout: 300000,
[0]       headersTimeout: 60000,
[0]       keepAliveTimeout: 5000,
[0]       connectionsCheckingInterval: 30000,
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 2,
[0]       _maxListeners: undefined,
[0]       _connections: 1,
[0]       _handle: [TCP],
[0]       _usingWorkers: false,
[0]       _workers: [],
[0]       _unref: false,
[0]       allowHalfOpen: true,
[0]       pauseOnConnect: false,
[0]       noDelay: true,
[0]       keepAlive: false,
[0]       keepAliveInitialDelay: 0,
[0]       httpAllowHalfOpen: false,
[0]       timeout: 0,
[0]       maxHeadersCount: null,
[0]       maxRequestsPerSocket: 0,
[0]       _connectionKey: '6::::5000',
[0]       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
[0]       [Symbol(ServerResponse)]: [Function: ServerResponse],
[0]       [Symbol(kCapture)]: false,
[0]       [Symbol(async_id_symbol)]: 10,
[0]       [Symbol(http.server.connections)]: ConnectionsList {},
[0]       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
[0]         _idleTimeout: 30000,
[0]         _idlePrev: [TimersList],
[0]         _idleNext: [TimersList],
[0]         _idleStart: 422,
[0]         _onTimeout: [Function: bound checkConnections],
[0]         _timerArgs: undefined,
[0]         _repeat: 30000,
[0]         _destroyed: false,
[0]         [Symbol(refed)]: false,
[0]         [Symbol(kHasPrimitive)]: false,
[0]         [Symbol(asyncId)]: 9,
[0]         [Symbol(triggerId)]: 1
[0]       },
[0]       [Symbol(kUniqueHeaders)]: null
[0]     },
[0]     parser: HTTPParser {
[0]       '0': null,
[0]       '1': [Function: parserOnHeaders],
[0]       '2': [Function: parserOnHeadersComplete],
[0]       '3': [Function: parserOnBody],
[0]       '4': [Function: parserOnMessageComplete],
[0]       '5': [Function: bound onParserExecute],
[0]       '6': [Function: bound onParserTimeout],
[0]       _headers: [],
[0]       _url: '',
[0]       socket: [Circular *1],
[0]       incoming: [IncomingMessage],
[0]       outgoing: null,
[0]       maxHeaderPairs: 2000,
[0]       _consumed: true,
[0]       onIncoming: [Function: bound parserOnIncoming],
[0]       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
[0]     },
[0]     on: [Function: socketListenerWrap],
[0]     addListener: [Function: socketListenerWrap],
[0]     prependListener: [Function: socketListenerWrap],
[0]     setEncoding: [Function: socketSetEncoding],
[0]     _paused: false,
[0]     _httpMessage: [Circular *2],
[0]     [Symbol(async_id_symbol)]: 134,
[0]     [Symbol(kHandle)]: TCP {
[0]       reading: true,
[0]       onconnection: null,
[0]       _consumed: true,
[0]       [Symbol(owner_symbol)]: [Circular *1]
[0]     },
[0]     [Symbol(lastWriteQueueSize)]: 0,
[0]     [Symbol(timeout)]: null,
[0]     [Symbol(kBuffer)]: null,
[0]     [Symbol(kBufferCb)]: null,
[0]     [Symbol(kBufferGen)]: null,
[0]     [Symbol(kCapture)]: false,
[0]     [Symbol(kSetNoDelay)]: true,
[0]     [Symbol(kSetKeepAlive)]: false,
[0]     [Symbol(kSetKeepAliveInitialDelay)]: 0,
[0]     [Symbol(kBytesRead)]: 0,
[0]     [Symbol(kBytesWritten)]: 0
[0]   },
[0]   _header: null,
[0]   _keepAliveTimeout: 5000,
[0]   _onPendingData: [Function: bound updateOutgoingData],
[0]   req: IncomingMessage {
[0]     _readableState: ReadableState {
[0]       objectMode: false,
[0]       highWaterMark: 16384,
[0]       buffer: BufferList { head: null, tail: null, length: 0 },
[0]       length: 0,
[0]       pipes: [],
[0]       flowing: null,
[0]       ended: true,
[0]       endEmitted: false,
[0]       reading: false,
[0]       constructed: true,
[0]       sync: true,
[0]       needReadable: false,
[0]       emittedReadable: false,
[0]       readableListening: false,
[0]       resumeScheduled: false,
[0]       errorEmitted: false,
[0]       emitClose: true,
[0]       autoDestroy: true,
[0]       destroyed: false,
[0]       errored: null,
[0]       closed: false,
[0]       closeEmitted: false,
[0]       defaultEncoding: 'utf8',
[0]       awaitDrainWriters: null,
[0]       multiAwaitDrain: false,
[0]       readingMore: true,
[0]       dataEmitted: false,
[0]       decoder: null,
[0]       encoding: null,
[0]       [Symbol(kPaused)]: null
[0]     },
[0]     _events: [Object: null prototype] {},
[0]     _eventsCount: 0,
[0]     _maxListeners: undefined,
[0]     socket: <ref *1> Socket {
[0]       connecting: false,
[0]       _hadError: false,
[0]       _parent: null,
[0]       _host: null,
[0]       _readableState: [ReadableState],
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 8,
[0]       _maxListeners: undefined,
[0]       _writableState: [WritableState],
[0]       allowHalfOpen: true,
[0]       _sockname: null,
[0]       _pendingData: null,
[0]       _pendingEncoding: '',
[0]       server: [Server],
[0]       _server: [Server],
[0]       parser: [HTTPParser],
[0]       on: [Function: socketListenerWrap],
[0]       addListener: [Function: socketListenerWrap],
[0]       prependListener: [Function: socketListenerWrap],
[0]       setEncoding: [Function: socketSetEncoding],
[0]       _paused: false,
[0]       _httpMessage: [Circular *2],
[0]       [Symbol(async_id_symbol)]: 134,
[0]       [Symbol(kHandle)]: [TCP],
[0]       [Symbol(lastWriteQueueSize)]: 0,
[0]       [Symbol(timeout)]: null,
[0]       [Symbol(kBuffer)]: null,
[0]       [Symbol(kBufferCb)]: null,
[0]       [Symbol(kBufferGen)]: null,
[0]       [Symbol(kCapture)]: false,
[0]       [Symbol(kSetNoDelay)]: true,
[0]       [Symbol(kSetKeepAlive)]: false,
[0]       [Symbol(kSetKeepAliveInitialDelay)]: 0,
[0]       [Symbol(kBytesRead)]: 0,
[0]       [Symbol(kBytesWritten)]: 0
[0]     },
[0]     httpVersionMajor: 1,
[0]     httpVersionMinor: 1,
[0]     httpVersion: '1.1',
[0]     complete: true,
[0]     rawHeaders: [
[0]       'Host',
[0]       'localhost:5000',
[0]       'Connection',
[0]       'keep-alive',
[0]       'Accept',
[0]       'application/json, text/plain, */*',
[0]       'User-Agent',
[0]       'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.114 Safari/537.36',
[0]       'Sec-GPC',
[0]       '1',
[0]       'Origin',
[0]       'http://localhost:3000',
[0]       'Sec-Fetch-Site',
[0]       'same-site',
[0]       'Sec-Fetch-Mode',
[0]       'cors',
[0]       'Sec-Fetch-Dest',
[0]       'empty',
[0]       'Referer',
[0]       'http://localhost:3000/',
[0]       'Accept-Encoding',
[0]       'gzip, deflate, br',
[0]       'Accept-Language',
[0]       'en-US,en;q=0.9',
[0]       'If-None-Match',
[0]       'W/"42c-AzzitYJqWDtbQcsfO/DsJ+uqhNo"'
[0]     ],
[0]     rawTrailers: [],
[0]     aborted: false,
[0]     upgrade: false,
[0]     url: '/',
[0]     method: 'GET',
[0]     statusCode: null,
[0]     statusMessage: null,
[0]     client: <ref *1> Socket {
[0]       connecting: false,
[0]       _hadError: false,
[0]       _parent: null,
[0]       _host: null,
[0]       _readableState: [ReadableState],
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 8,
[0]       _maxListeners: undefined,
[0]       _writableState: [WritableState],
[0]       allowHalfOpen: true,
[0]       _sockname: null,
[0]       _pendingData: null,
[0]       _pendingEncoding: '',
[0]       server: [Server],
[0]       _server: [Server],
[0]       parser: [HTTPParser],
[0]       on: [Function: socketListenerWrap],
[0]       addListener: [Function: socketListenerWrap],
[0]       prependListener: [Function: socketListenerWrap],
[0]       setEncoding: [Function: socketSetEncoding],
[0]       _paused: false,
[0]       _httpMessage: [Circular *2],
[0]       [Symbol(async_id_symbol)]: 134,
[0]       [Symbol(kHandle)]: [TCP],
[0]       [Symbol(lastWriteQueueSize)]: 0,
[0]       [Symbol(timeout)]: null,
[0]       [Symbol(kBuffer)]: null,
[0]       [Symbol(kBufferCb)]: null,
[0]       [Symbol(kBufferGen)]: null,
[0]       [Symbol(kCapture)]: false,
[0]       [Symbol(kSetNoDelay)]: true,
[0]       [Symbol(kSetKeepAlive)]: false,
[0]       [Symbol(kSetKeepAliveInitialDelay)]: 0,
[0]       [Symbol(kBytesRead)]: 0,
[0]       [Symbol(kBytesWritten)]: 0
[0]     },
[0]     _consuming: false,
[0]     _dumped: false,
[0]     next: [Function: next],
[0]     baseUrl: '/api/items',
[0]     originalUrl: '/api/items',
[0]     _parsedUrl: Url {
[0]       protocol: null,
[0]       slashes: null,
[0]       auth: null,
[0]       host: null,
[0]       port: null,
[0]       hostname: null,
[0]       hash: null,
[0]       search: null,
[0]       query: null,
[0]       pathname: '/',
[0]       path: '/',
[0]       href: '/',
[0]       _raw: '/'
[0]     },
[0]     params: {},
[0]     query: {},
[0]     res: [Circular *2],
[0]     body: {},
[0]     _parsedOriginalUrl: Url {
[0]       protocol: null,
[0]       slashes: null,
[0]       auth: null,
[0]       host: null,
[0]       port: null,
[0]       hostname: null,
[0]       hash: null,
[0]       search: null,
[0]       query: null,
[0]       pathname: '/api/items',
[0]       path: '/api/items',
[0]       href: '/api/items',
[0]       _raw: '/api/items'
[0]     },
[0]     route: Route { path: '/', stack: [Array], methods: [Object] },
[0]     [Symbol(kCapture)]: false,
[0]     [Symbol(kHeaders)]: {
[0]       host: 'localhost:5000',
[0]       connection: 'keep-alive',
[0]       accept: 'application/json, text/plain, */*',
[0]       'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.114 Safari/537.36',
[0]       'sec-gpc': '1',
[0]       origin: 'http://localhost:3000',
[0]       'sec-fetch-site': 'same-site',
[0]       'sec-fetch-mode': 'cors',
[0]       'sec-fetch-dest': 'empty',
[0]       referer: 'http://localhost:3000/',
[0]       'accept-encoding': 'gzip, deflate, br',
[0]       'accept-language': 'en-US,en;q=0.9',
[0]       'if-none-match': 'W/"42c-AzzitYJqWDtbQcsfO/DsJ+uqhNo"'
[0]     },
[0]     [Symbol(kHeadersCount)]: 26,
[0]     [Symbol(kTrailers)]: null,
[0]     [Symbol(kTrailersCount)]: 0
[0]   },
[0]   _sent100: false,
[0]   _expect_continue: false,
[0]   locals: [Object: null prototype] {},
[0]   [Symbol(kCapture)]: false,
[0]   [Symbol(kNeedDrain)]: false,
[0]   [Symbol(corked)]: 0,
[0]   [Symbol(kOutHeaders)]: [Object: null prototype] {
[0]     'x-powered-by': [ 'X-Powered-By', 'Express' ],
[0]     'access-control-allow-origin': [ 'Access-Control-Allow-Origin', '*' ]
[0]   },
[0]   [Symbol(kUniqueHeaders)]: null
[0] }